<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.library.dao.UserMapper">
    <resultMap id="userMap" type="com.library.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="age" column="age"/>
        <result property="gender" column="gender"/>
        <result property="status" column="status"/>
        <result property="role" column="role"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="getAllUsers" resultMap="userMap">
        SELECT * FROM user ORDER BY id
    </select>

    <select id="getUserById" resultMap="userMap">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <update id="updateUser">
        UPDATE user
        SET username = #{username},
            password = #{password},
            age = #{age},
            gender = #{gender},
            status = #{status},
            role = #{role},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteUser">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <update id="updateUserStatus">
        UPDATE user
        SET status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 添加登录和注册相关SQL -->
    <select id="getUserByUsername" resultMap="userMap">
        SELECT * FROM user WHERE username = #{username}
    </select>

    <insert id="insertUser">
        INSERT INTO user (username, password, age, gender, status, role)
        VALUES (#{username}, #{password}, #{age}, #{gender}, 1, #{role})
    </insert>

    <select id="login" resultMap="userMap">
        SELECT * FROM user
        WHERE username = #{username}
        AND password = #{password}
        AND status = 1
    </select>

    <update id="updateUserProfile" parameterType="com.library.entity.User">
        UPDATE user
        SET age = #{age},
            gender = #{gender},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <select id="getAllAdmins" resultMap="userMap">
        SELECT * FROM user WHERE role = 'ADMIN' AND status = 1
    </select>

    <select id="getUserBorrowRank" resultType="java.util.HashMap">
        SELECT u.id, u.username, COUNT(br.id) AS borrowCount
        FROM user u
        LEFT JOIN borrow_record br ON u.id = br.user_id
        GROUP BY u.id, u.username
        ORDER BY borrowCount DESC
        LIMIT #{limit}
    </select>
</mapper>
